// ===============================================
// Travel Optics - 使用本地依赖的构建配置
// ===============================================
// 此配置文件使用 libs/ 文件夹中的手动下载的JAR
// 避免CurseForge Maven下载问题
// ===============================================

plugins {
    id 'eclipse'
    id 'idea'
    id 'maven-publish'
    id 'net.minecraftforge.gradle' version '[6.0,6.2)'
}

version = '5.5.0-1.20.1-NoAlexsCaves'
group = 'com.gametechbc.traveloptics'

base {
    archivesName = 'traveloptics'
}

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

minecraft {
    mappings channel: 'official', version: '1.20.1'
    
    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'traveloptics'

            mods {
                traveloptics {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'traveloptics'

            mods {
                traveloptics {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            args '--mod', 'traveloptics', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                traveloptics {
                    source sourceSets.main
                }
            }
        }
    }
}

repositories {
    // 本地libs文件夹 - 最高优先级
    flatDir {
        dirs 'libs'
    }
    
    mavenCentral()
    
    maven {
        name = "Minecraft Libraries"
        url = "https://libraries.minecraft.net/"
    }
    
    maven {
        name = "Jared's maven"
        url = "https://maven.blamejared.com/"
    }
    
    maven {
        name = "Curios"
        url = "https://maven.theillusivec4.top/"
    }
    
    maven {
        name = "ModMaven"
        url = "https://modmaven.dev"
    }
    
    maven {
        name = "GeckoLib"
        url = "https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/"
    }
    
    // CurseForge Maven作为后备（如果libs文件夹没有的话）
    maven {
        name = "Curse Maven"
        url = "https://cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.20.1-47.4.9'
    
    // 使用libs文件夹中的所有JAR文件
    // 这会自动包含Iron's Spells, Cataclysm, AttributesLib, Curios, GeckoLib, PlayerAnimator, Caelus
    implementation fileTree(dir: 'libs', include: ['*.jar'])
}

tasks.named('processResources', ProcessResources).configure {
    var replaceProperties = [
            minecraft_version   : minecraft_version,
            minecraft_version_range: minecraft_version_range,
            forge_version       : forge_version,
            forge_version_range : forge_version_range,
            loader_version_range: loader_version_range,
            mod_id              : mod_id,
            mod_name            : mod_name,
            mod_license         : mod_license,
            mod_version         : mod_version,
            mod_authors         : mod_authors,
            mod_description     : mod_description
    ]
    inputs.properties replaceProperties

    filesMatching(['META-INF/mods.toml']) {
        expand replaceProperties + [project: project]
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : mod_id,
                "Specification-Vendor"    : mod_authors,
                "Specification-Version"   : "1",
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : mod_authors,
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
    
    finalizedBy 'reobfJar'
}

publishing {
    publications {
        register('mavenJava', MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}
